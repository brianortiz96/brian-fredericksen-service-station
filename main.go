package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"strings"
	"time"
)

// error checker
func Check(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

func main() {

	fmt.Println("Checking for all necessary files...")
	time.Sleep(1 * time.Second)

	fileCheck("customers.csv")
	fileCheck("dealers.csv")
	fileCheck("serviceTransactionHistory.csv")
	fileCheck("couponNotificationHistory.csv")

	reader := bufio.NewReader(os.Stdin)
	userResponse := ""
	for userResponse != "4" {
		CustomerHeader, Customers, err := ReadCsv("customers.csv")
		Check(err)
		CoupNotifHistHeader, CoupNotifHist, err := ReadCsv("couponNotificationHistory.csv")
		Check(err)
		TransHistHeader, TransHist, err := ReadCsv("serviceTransactionHistory.csv")
		Check(err)
		DealerHeader, Dealers, err := ReadCsv("dealers.csv")
		Check(err)
		fmt.Println()
		fmt.Println("Service Station Main Menu:")
		fmt.Println()
		fmt.Println("Enter the number of the menu item you'd like to select:")
		fmt.Println()
		fmt.Println("1: Check which customers are eligible for oil change coupon")
		fmt.Println("2. Check Coupon Notification History of a customer")
		fmt.Println("3. View, Add, Update, or Delete Records")
		fmt.Println("4. Quit")
		fmt.Println()
		fmt.Print("Your response:")
		userResponse, err = reader.ReadString('\n')
		Check(err)
		userResponse = strings.TrimSpace(userResponse)
		if userResponse == "1" {
			CouponNotify(CoupNotifHist, TransHist, Customers)
			fmt.Println("Refreshing CSV files...")
			time.Sleep(1 * time.Second)
			break
		} else if userResponse == "2" {
			CouponNotifCheckMenu(CustomerHeader, Customers, CoupNotifHist)
			fmt.Println("Refreshing CSV files...")
			time.Sleep(1 * time.Second)
		} else if userResponse == "3" {
			userRecordChoice := ""
			for userRecordChoice != "4" {
				fmt.Println()
				fmt.Println("Which records would you like to work with?")
				time.Sleep(1 * time.Second)
				fmt.Println()
				fmt.Println("1: Customers")
				fmt.Println("2: Dealers")
				fmt.Println("3: Service Transactions")
				fmt.Println("4: Coupon Notifications")
				fmt.Println("5: Quit to Main Menu")
				fmt.Println()
				fmt.Print("Your response:")
				userRecordChoice, err := reader.ReadString('\n')
				Check(err)
				userRecordChoice = strings.TrimSpace(userRecordChoice)
				if userRecordChoice == "1" {
					RecordsMenu("Customers", TransHist, CoupNotifHist, Dealers, Customers, CustomerHeader, "customers.csv")
					fmt.Println("Refreshing CSV files...")
					time.Sleep(1 * time.Second)
					break
				} else if userRecordChoice == "2" {
					RecordsMenu("Dealers", TransHist, CoupNotifHist, Dealers, Customers, DealerHeader, "dealers.csv")
					fmt.Println("Refreshing CSV files...")
					time.Sleep(1 * time.Second)
					break
				} else if userRecordChoice == "3" {
					RecordsMenu("Service Transactions", TransHist, CoupNotifHist, Dealers, Customers, TransHistHeader, "serviceTransactionHistory.csv")
					fmt.Println("Refreshing CSV files...")
					time.Sleep(1 * time.Second)
					break
				} else if userRecordChoice == "4" {
					fmt.Println()
					fmt.Println("The Coupon Notification History is Read Only. Entries cannot be edited or deleted.")
					fmt.Println("New entries can be generated by checking which Customers are eligible for a coupon notification on the Main Menu.")
					fmt.Println("Would you like to view the Coupon Notification History?")
					time.Sleep(1 * time.Second)
					fmt.Println()
					fmt.Println("(Y/N)?:")
					userYesNo, err := reader.ReadString('\n')
					Check(err)
					userYesNo = strings.TrimSpace(userYesNo)
					userYesNo = strings.ToLower(userYesNo)
					if userYesNo == "y" {
						ReadRecords(CoupNotifHist, CoupNotifHistHeader)
					}
				} else if userRecordChoice == "5" {
					fmt.Println()
					fmt.Println("Returning to Main Menu...")
					time.Sleep(1 * time.Second)
					break
				} else {
					InvalidResponse()
				}
			}
		} else if userResponse == "4" {
			fmt.Println("Quitting Service Station...")
			time.Sleep(1 * time.Second)
			break
		} else {
			InvalidResponse()
		}
	}
}
